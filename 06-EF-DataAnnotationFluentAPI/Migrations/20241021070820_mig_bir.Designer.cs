// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _06_EF_DataAnnotationFluentAPI.Context;

#nullable disable

namespace _06_EF_DataAnnotationFluentAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241021070820_mig_bir")]
    partial class mig_bir
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_06_EF_DataAnnotationFluentAPI.Entities.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            FirstName = "William",
                            LastName = "Shakespeare"
                        },
                        new
                        {
                            AuthorId = 2,
                            FirstName = "Fyodor",
                            LastName = "Dostoyeski"
                        },
                        new
                        {
                            AuthorId = 3,
                            FirstName = "Fatih",
                            LastName = "Alkan"
                        });
                });

            modelBuilder.Entity("_06_EF_DataAnnotationFluentAPI.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Description")
                        .HasColumnOrder(2);

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.ToTable("TblBook", (string)null);
                });

            modelBuilder.Entity("_06_EF_DataAnnotationFluentAPI.Entities.Book", b =>
                {
                    b.HasOne("_06_EF_DataAnnotationFluentAPI.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("_06_EF_DataAnnotationFluentAPI.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
